{"version":3,"sources":["BooksAPI.js","utils/helpers.js","components/Book.js","pages/search.js","pages/home.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","upperCaseSplit","str","textTransform","originalStr","split","join","toLowerCase","toUppercase","charAt","toUpperCase","slice","Book","props","react_default","a","createElement","className","style","width","height","backgroundImage","img","defaultValue","onChange","e","updateShelf","target","value","disabled","map","option","key","id","title","authors","Search","state","queryResults","queryBooks","BooksAPI","results","length","result","_this","addBookShelf","setState","console","log","hasShelf","this","filter","_this2","react_router_dom","to","lib","debounceTimeout","type","placeholder","event","components_Book","imageLinks","thumbnail","React","Component","Home","booksShelf","index","BooksApp","b","_this3","react_router","exact","path","render","home","pages_search","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dda6d65e.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token)\r\n   token = localStorage.token = Math.random()\r\n      .toString(36)\r\n      .substr(-8);\r\n\r\nconst headers = {\r\n   Accept: \"application/json\",\r\n   Authorization: token\r\n};\r\n\r\nexport const get = bookId =>\r\n   fetch(`${api}/books/${bookId}`, { headers })\r\n      .then(res => res.json())\r\n      .then(data => data.book);\r\n\r\nexport const getAll = () =>\r\n   fetch(`${api}/books`, { headers })\r\n      .then(res => res.json())\r\n      .then(data => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n   fetch(`${api}/books/${book}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n         ...headers,\r\n         \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ shelf })\r\n   }).then(res => res.json());\r\n\r\nexport const search = query =>\r\n   fetch(`${api}/search`, {\r\n      method: \"POST\",\r\n      headers: {\r\n         ...headers,\r\n         \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ query })\r\n   })\r\n      .then(res => res.json())\r\n      .then(data => data.books);\r\n","export const upperCaseSplit = (str, textTransform) => {\r\n   var originalStr = str\r\n      .split(/(?=[A-Z])/)\r\n      .join(\" \")\r\n      .toLowerCase();\r\n   if (textTransform === \"uppercase\") return originalStr.toUppercase();\r\n   else if (textTransform === \"lowercase\") return originalStr;\r\n   else return originalStr.charAt(0).toUpperCase() + originalStr.slice(1);\r\n};\r\n","import React from \"react\";\r\nimport { upperCaseSplit } from \"../utils/helpers\";\r\n\r\nfunction Book(props) {\r\n   var bookOptions = [\"currentlyReading\", \"wantToRead\", \"read\", \"none\"];\r\n\r\n   return (\r\n      <li>\r\n         <div className=\"book\">\r\n            <div className=\"book-top\">\r\n               <div\r\n                  className=\"book-cover\"\r\n                  style={{\r\n                     width: 128,\r\n                     height: 193,\r\n                     backgroundImage: `url(${props.img})`\r\n                  }}\r\n               />\r\n               <div className=\"book-shelf-changer\">\r\n                  <select\r\n                     defaultValue={props.shelf}\r\n                     onChange={e =>\r\n                        props.updateShelf(e.target.value, props.book)\r\n                     }\r\n                  >\r\n                     <option value=\"move\" disabled>\r\n                        Move to...\r\n                     </option>\r\n                     {bookOptions.map(option => (\r\n                        <option value={option} key={props.id + option}>\r\n                           {upperCaseSplit(option)}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n            </div>\r\n            <div className=\"book-title\">{props.title}</div>\r\n            <div className=\"book-authors\">{props.authors}</div>\r\n         </div>\r\n      </li>\r\n   );\r\n}\r\n\r\nexport default Book;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DebounceInput } from \"react-debounce-input\";\r\nimport * as BooksAPI from \"../BooksAPI\";\r\nimport Book from \"../components/Book\";\r\n\r\nclass Search extends React.Component {\r\n   state = {\r\n      queryResults: []\r\n   };\r\n\r\n   queryBooks = query => {\r\n      let queryResults = [];\r\n\r\n      if (query) {\r\n         BooksAPI.search(query).then(results => {\r\n            if (results && results.length) {\r\n               queryResults = results.map(result => {\r\n                  result.shelf = this.addBookShelf(result);\r\n                  return result;\r\n               });\r\n               this.setState({\r\n                  queryResults\r\n               });\r\n            } else {\r\n               this.setState({\r\n                  queryResults: []\r\n               });\r\n               console.log(\"Nothing\");\r\n            }\r\n         });\r\n      }\r\n   };\r\n\r\n   addBookShelf(result) {\r\n      let hasShelf = this.props.books.filter(book => book.id === result.id);\r\n      return hasShelf.length ? hasShelf[0].shelf : \"none\";\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n               <Link className=\"close-search\" to=\"/\">\r\n                  Close\r\n               </Link>\r\n               <div className=\"search-books-input-wrapper\">\r\n                  <DebounceInput\r\n                     debounceTimeout={2000}\r\n                     type=\"text\"\r\n                     placeholder=\"Search by title or author\"\r\n                     onChange={event => this.queryBooks(event.target.value)}\r\n                  />\r\n               </div>\r\n            </div>\r\n            {this.state.queryResults.length ? (\r\n               <div className=\"search-books-results\">\r\n                  <ol className=\"books-grid\">\r\n                     {this.state.queryResults.map(book => (\r\n                        <Book\r\n                           updateShelf={this.props.updateShelf}\r\n                           book={book}\r\n                           key={book.id}\r\n                           id={book.id}\r\n                           shelf={book.shelf}\r\n                           img={book.imageLinks && book.imageLinks.thumbnail}\r\n                           title={book.title}\r\n                           authors={book.authors}\r\n                        />\r\n                     ))}\r\n                  </ol>\r\n               </div>\r\n            ) : null}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Book from \"../components/Book\";\r\nimport { upperCaseSplit } from \"../utils/helpers\";\r\n\r\nfunction Home(props) {\r\n   const { books } = props;\r\n   const booksShelf = [\r\n      books.filter(book => book.shelf === \"currentlyReading\"),\r\n      books.filter(book => book.shelf === \"read\"),\r\n      books.filter(book => book.shelf === \"wantToRead\")\r\n   ];\r\n\r\n   return (\r\n      <div className=\"list-books\">\r\n         <div className=\"list-books-title\">\r\n            <h1>MyReads</h1>\r\n         </div>\r\n         {booksShelf.map((shelf, index) => {\r\n            if (shelf.length)\r\n               return (\r\n                  <div\r\n                     className=\"list-books-content\"\r\n                     key={\"shelf_\" + index + shelf}\r\n                  >\r\n                     <div>\r\n                        <div className=\"bookshelf\">\r\n                           <h2 className=\"bookshelf-title\">\r\n                              {upperCaseSplit(shelf[0].shelf)}\r\n                           </h2>\r\n                           <div className=\"bookshelf-books\">\r\n                              <ol className=\"books-grid\">\r\n                                 {shelf.map(book => (\r\n                                    <Book\r\n                                       updateShelf={props.updateShelf}\r\n                                       book={book}\r\n                                       key={book.id}\r\n                                       id={book.id}\r\n                                       shelf={book.shelf}\r\n                                       img={\r\n                                          book.imageLinks &&\r\n                                          book.imageLinks.thumbnail\r\n                                       }\r\n                                       title={book.title}\r\n                                       authors={book.authors}\r\n                                    />\r\n                                 ))}\r\n                              </ol>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               );\r\n         })}\r\n         <div className=\"open-search\">\r\n            <Link to=\"/search\">Add a book</Link>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport Search from \"./pages/search\";\r\nimport Home from \"./pages/home\";\r\nimport \"./App.css\";\r\n\r\nclass BooksApp extends React.Component {\r\n   state = {\r\n      books: []\r\n   };\r\n\r\n   componentDidMount() {\r\n      BooksAPI.getAll().then(books => {\r\n         this.setState({\r\n            books\r\n         });\r\n      });\r\n   }\r\n\r\n   updateShelf = (shelf, book) => {\r\n      book.shelf = shelf;\r\n\r\n      BooksAPI.update(book.id, shelf).then(result => {\r\n         this.setState(state => ({\r\n            books: state.books.filter(b => b.id !== book.id).concat([book])\r\n         }));\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"app\">\r\n            <BrowserRouter>\r\n               <Route\r\n                  exact\r\n                  path=\"/\"\r\n                  render={() => (\r\n                     <Home\r\n                        books={this.state.books}\r\n                        updateShelf={this.updateShelf}\r\n                     />\r\n                  )}\r\n               />\r\n               <Route\r\n                  path=\"/search\"\r\n                  render={() => (\r\n                     <Search\r\n                        books={this.state.books}\r\n                        updateShelf={this.updateShelf}\r\n                     />\r\n                  )}\r\n               />\r\n            </BrowserRouter>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}